{"ast":null,"code":"import _objectSpread from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport t, { useMemo as o, useState as e, useRef as r } from \"react\";\nimport i from \"../tooltip\";\nimport n from \"../utils/with-defaults\";\nimport p from \"../use-clipboard\";\nimport { __DEV__ as s } from \"../utils/assertion\";\nimport l from \"./snippet-icon\";\nimport { StyledSnippet as c, StyledSnippetPre as m, StyledSnippetCopyButton as u } from \"./snippet.styles\";\nimport { jsx as a } from \"react/jsx-runtime\";\nimport { jsxs as d } from \"react/jsx-runtime\";\nvar x = function x(_ref) {\n  var t = _ref.bordered,\n    n = _ref.children,\n    s = _ref.symbol,\n    x = _ref.showTooltip,\n    f = _ref.text,\n    y = _ref.tooltipCopyText,\n    h = _ref.tooltipCopiedText,\n    C = _ref.tooltipColor,\n    b = _ref.copy,\n    T = _objectWithoutProperties(_ref, [\"bordered\", \"children\", \"symbol\", \"showTooltip\", \"text\", \"tooltipCopyText\", \"tooltipCopiedText\", \"tooltipColor\", \"copy\"]);\n  var _e = e(!1),\n    _e2 = _slicedToArray(_e, 2),\n    N = _e2[0],\n    $ = _e2[1],\n    _p = p(),\n    j = _p.copy,\n    w = r(null),\n    A = f && Array.isArray(f),\n    g = o(function () {\n      return \"prevent\" !== b;\n    }, [b]),\n    k = o(function () {\n      return A ? function (t) {\n        return t.reduce(function (t, o) {\n          return o ? t ? \"\".concat(t, \"\\n\").concat(o) : o : t;\n        }, \"\");\n      }(f) : n ? w.current ? w.current.textContent : \"\" : f;\n    }, [w.current, n, f]),\n    v = o(function () {\n      var t = s.trim();\n      return t ? \"\".concat(t, \" \") : \"\";\n    }, [s]),\n    S = function S() {\n      k && g && (j(k), \"slient\" !== b && $(!0));\n    };\n  return d(c, _objectSpread({}, T, {\n    children: [A ? f.map(function (t, o) {\n      return a(m, {\n        className: \"nextui-snippet-pre\",\n        css: {\n          \"&:before\": {\n            content: v,\n            us: \"none\"\n          }\n        },\n        children: t\n      }, \"\".concat(o, \"-\").concat(t));\n    }) : a(m, {\n      ref: w,\n      className: \"nextui-snippet-pre\",\n      css: {\n        \"&:before\": {\n          content: v,\n          us: \"none\"\n        }\n      },\n      children: n || f\n    }), g && \"slient\" !== b ? a(i, {\n      hideArrow: !0,\n      rounded: !0,\n      color: C,\n      content: N ? h : y,\n      onVisibleChange: function onVisibleChange() {\n        setTimeout(function () {\n          N && $(!1);\n        }, 400);\n      },\n      children: a(u, {\n        className: \"nextui-snippet-copy-button\",\n        onClick: S,\n        children: a(l, {})\n      })\n    }) : \"prevent\" !== b && a(u, {\n      className: \"nextui-snippet-copy-button\",\n      onClick: S,\n      children: a(l, {})\n    })]\n  }));\n};\ns && (x.displayName = \"NextUI.Snippet\"), x.toString = function () {\n  return \".nextui-snippet\";\n};\nvar f = t.memo(x);\nexport default n(f, {\n  symbol: \"$\",\n  showTooltip: !0,\n  copy: \"default\",\n  tooltipColor: \"default\",\n  tooltipCopyText: \"Copy\",\n  tooltipCopiedText: \"Copied\"\n});","map":null,"metadata":{},"sourceType":"module"}