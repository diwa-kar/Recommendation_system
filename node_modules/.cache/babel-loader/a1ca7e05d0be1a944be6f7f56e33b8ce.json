{"ast":null,"code":"import { pick as t } from \"../utils/collections\";\nvar e = [\"borderBottomWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderTopWidth\", \"boxSizing\", \"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"letterSpacing\", \"lineHeight\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"paddingTop\", \"tabSize\", \"textIndent\", \"textRendering\", \"textTransform\", \"width\", \"wordBreak\"],\n  o = {\n    \"min-height\": \"0\",\n    \"max-height\": \"none\",\n    height: \"0\",\n    visibility: \"hidden\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    \"z-index\": \"-1000\",\n    top: \"0\",\n    right: \"0\"\n  },\n  i = \"undefined\" != typeof document && !!document.documentElement.currentStyle;\nexport var forceHiddenStyles = function forceHiddenStyles(t) {\n  Object.keys(o).forEach(function (e) {\n    t.style.setProperty(e, o[e], \"important\");\n  });\n};\nexport var getSizingData = function getSizingData(o) {\n  var r = window.getComputedStyle(o);\n  if (null === r) return null;\n  var d = t(e, r),\n    n = d.boxSizing;\n  if (\"\" === n) return null;\n  i && \"border-box\" === n && (d.width = parseFloat(d.width) + parseFloat(d.borderRightWidth) + parseFloat(d.borderLeftWidth) + parseFloat(d.paddingRight) + parseFloat(d.paddingLeft) + \"px\");\n  return {\n    sizingStyle: d,\n    paddingSize: parseFloat(d.paddingBottom) + parseFloat(d.paddingTop),\n    borderSize: parseFloat(d.borderBottomWidth) + parseFloat(d.borderTopWidth)\n  };\n};\nvar r = null;\nexport var calculateNodeHeight = function calculateNodeHeight(t, e) {\n  var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / 0;\n  r || (r = document.createElement(\"textarea\"), r.setAttribute(\"tabindex\", \"-1\"), r.setAttribute(\"aria-hidden\", \"true\"), forceHiddenStyles(r)), null === r.parentNode && document.body.appendChild(r);\n  var d = t.paddingSize,\n    n = t.borderSize,\n    a = t.sizingStyle,\n    l = a.boxSizing;\n  Object.keys(a).forEach(function (t) {\n    var e = t;\n    r.style[e] = a[e];\n  }), forceHiddenStyles(r), r.value = e;\n  var s = function (t, e) {\n    var o = t.scrollHeight;\n    return \"border-box\" === e.sizingStyle.boxSizing ? o + e.borderSize : o - e.paddingSize;\n  }(r, t);\n  r.value = \"x\";\n  var p = r.scrollHeight - d;\n  var g = p * o;\n  \"border-box\" === l && (g = g + d + n), s = Math.max(g, s);\n  var h = p * i;\n  return \"border-box\" === l && (h = h + d + n), s = Math.min(h, s), [s, p];\n};","map":null,"metadata":{},"sourceType":"module"}