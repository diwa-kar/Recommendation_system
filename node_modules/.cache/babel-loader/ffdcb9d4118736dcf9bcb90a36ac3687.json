{"ast":null,"code":"import _objectSpread from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { mergeProps as $7CUUz$mergeProps, filterDOMProps as $7CUUz$filterDOMProps } from \"@react-aria/utils\";\nimport { useFocusable as $7CUUz$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $7CUUz$usePress } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n  var _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    isRequired = props.isRequired,\n    isReadOnly = props.isReadOnly,\n    value = props.value,\n    name = props.name,\n    children = props.children,\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledby = props[\"aria-labelledby\"],\n    _props$validationStat = props.validationState,\n    validationState = _props$validationStat === void 0 ? \"valid\" : _props$validationStat;\n  var onChange = function onChange(e) {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn(\"If you do not provide children, you must specify an aria-label for accessibility\");\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  var _ref = (0, $7CUUz$usePress)({\n      isDisabled: isDisabled\n    }),\n    pressProps = _ref.pressProps;\n  var _ref2 = (0, $7CUUz$useFocusable)(props, ref),\n    focusableProps = _ref2.focusableProps;\n  var interactions = (0, $7CUUz$mergeProps)(pressProps, focusableProps);\n  var domProps = (0, $7CUUz$filterDOMProps)(props, {\n    labelable: true\n  });\n  return {\n    inputProps: (0, $7CUUz$mergeProps)(domProps, _objectSpread({\n      \"aria-invalid\": validationState === \"invalid\" || undefined,\n      \"aria-errormessage\": props[\"aria-errormessage\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-readonly\": isReadOnly || undefined,\n      \"aria-required\": isRequired || undefined,\n      onChange: onChange,\n      disabled: isDisabled\n    }, value == null ? {} : {\n      value: value\n    }, {\n      name: name,\n      type: \"checkbox\"\n    }, interactions))\n  };\n}\nexport { $d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle };","map":null,"metadata":{},"sourceType":"module"}