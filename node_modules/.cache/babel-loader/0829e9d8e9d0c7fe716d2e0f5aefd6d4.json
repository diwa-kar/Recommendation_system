{"ast":null,"code":"import _objectSpread from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { createStitches as e } from \"@stitches/react\";\nimport t from \"../utils/deep-merge\";\nimport o from \"./common\";\nimport s from \"./light-theme\";\nimport r from \"./dark-theme\";\nexport var getStitchesTheme = function getStitchesTheme(e) {\n  return t(e, o.theme);\n};\nvar m = e(_objectSpread({}, o, {\n  theme: _objectSpread({}, o.theme, {\n    shadows: _objectSpread({}, s.shadows),\n    dropShadows: _objectSpread({}, s.dropShadows),\n    colors: _objectSpread({}, o.theme.colors, s.colors)\n  })\n}));\nexport var createThemeBase = m.createTheme;\nexport var styled = m.styled;\nexport var css = m.css;\nexport var globalCss = m.globalCss;\nexport var keyframes = m.keyframes;\nexport var getCssText = m.getCssText;\nexport var theme = m.theme;\nexport var config = m.config;\nexport var createTheme = function createTheme(_ref) {\n  var e = _ref.type,\n    o = _ref.theme,\n    m = _ref.className;\n  if (!e) throw new Error(\"Theme type is required\");\n  return createThemeBase(m || \"\".concat(e, \"-theme\"), t(\"dark\" === e ? r : s, o));\n};","map":null,"metadata":{},"sourceType":"module"}