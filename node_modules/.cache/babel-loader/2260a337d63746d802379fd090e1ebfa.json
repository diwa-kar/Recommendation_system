{"ast":null,"code":"import _slicedToArray from \"F:\\\\Ecommerce_recommendation_system\\\\Ecom_rec_system\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect as e, useState as n } from \"react\";\nfunction r(r) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$threshold = _ref.threshold,\n    t = _ref$threshold === void 0 ? 0 : _ref$threshold,\n    _ref$root = _ref.root,\n    o = _ref$root === void 0 ? null : _ref$root,\n    _ref$rootMargin = _ref.rootMargin,\n    i = _ref$rootMargin === void 0 ? \"0%\" : _ref$rootMargin,\n    _ref$freezeOnceVisibl = _ref.freezeOnceVisible,\n    s = _ref$freezeOnceVisibl === void 0 ? !1 : _ref$freezeOnceVisibl;\n  var _n = n(),\n    _n2 = _slicedToArray(_n, 2),\n    c = _n2[0],\n    l = _n2[1],\n    u = (null == c ? void 0 : c.isIntersecting) && s,\n    d = !(null == c || !c.isIntersecting),\n    f = function f(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n        e = _ref3[0];\n      l(e);\n    };\n  return e(function () {\n    if (\"undefined\" == typeof window) return;\n    var e = null == r ? void 0 : r.current;\n    if (!!!window.IntersectionObserver || u || !e) return;\n    var n = new IntersectionObserver(f, {\n      threshold: t,\n      root: o,\n      rootMargin: i\n    });\n    return n.observe(e), function () {\n      return n.disconnect();\n    };\n  }, [r, t, o, i, u]), {\n    entry: c,\n    setEntry: l,\n    isVisible: d,\n    isFrozen: u\n  };\n}\nexport default r;","map":null,"metadata":{},"sourceType":"module"}