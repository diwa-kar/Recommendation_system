{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { MessageDictionary, MessageFormatter } from '@internationalized/message';\nimport { useCallback, useMemo } from 'react';\nimport { useLocale } from '../';\nvar cache = new WeakMap();\nfunction getCachedDictionary(strings) {\n  var dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n  return dictionary;\n}\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n * @deprecated - use useLocalizedStringFormatter instead.\n */\n\nexport function useMessageFormatter(strings) {\n  var _useLocale = useLocale(),\n    locale = _useLocale.locale;\n  var dictionary = useMemo(function () {\n    return getCachedDictionary(strings);\n  }, [strings]);\n  var formatter = useMemo(function () {\n    return new MessageFormatter(locale, dictionary);\n  }, [locale, dictionary]);\n  return useCallback(function (key, variables) {\n    return formatter.format(key, variables);\n  }, [formatter]);\n}","map":null,"metadata":{},"sourceType":"module"}